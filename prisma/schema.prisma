generator client {
  provider = "prisma-client-js"
  output = "../../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  first_name      String
  last_name      String
  username      String @unique
  email     String  @unique
  password  String
  phone_number  String
  orders   Order[]
  address   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  imageUrl  String
  isAdmin   Boolean @default(false)
  isVerified Boolean @default(false)
  isBlocked  Boolean @default(false)
  isActive  Boolean @default(false)
  carts Cart[]
}

model Product {
  id        String   @id @default(cuid())
  name      String
  description String
  price     Float
  stock     Int
  categoryId String
  category  Category @relation(fields: [categoryId], references: [id])
  imageUrl  String
  orders    Order[]  @relation("OrderToProduct")
  carts     Cart[]
  newCollectionId String?
  newCollection NewCollection? @relation(fields: [newCollectionId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id        String   @id @default(cuid())
  name      String
  description String
  products  Product[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  products  Product[] @relation("OrderToProduct")
  total     Float
  status    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Cart {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  products  Product[]
  total     Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model NewCollection {
  id        String   @id @default(cuid())
  name      String
  description String
  products  Product[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
